@use '@angular/material' as mat;
@import 'variables';

@mixin spread-map($map: ()) {
  @each $key, $value in $map {
    #{$key}: $value;
  }
}

@function background-gradient($color1, $color2) {
  @return linear-gradient(315deg, $color1, $color2);
}

@function theme-var($key, $fallback: null, $map: $theme-map-light) {
  @if not map-has-key($map, $key) {
    @error "key: '#{$key}', is not a key in map: #{$map}";
  }
  @if ($fallback) {
    @return var($key, $fallback);
  } @else {
    @return var($key);
  }
}

$simData_front-background: (
  app: theme-var(--theme-back1),
  card: theme-var(--theme-back2),
  dialog: theme-var(--theme-back1),
  disabled: theme-var(--theme-main),
  raised: theme-var(--theme-back2),
  text: theme-var(--theme-text1),
  tooltip: theme-var(--theme-back2),
  menu: theme-var(--theme-back2),
);

@mixin simData_front-theme($theme) {
  @if $theme == 'light' {
    $theme: $simData_front-theme-light;
  } @else if $theme == 'dark' {
    $theme: $simData_front-theme-dark;
  } @else {
    @error "theme: '#{$theme}' is not a valid theme";
  }

  //add background value to the theme
  $color: map-get($theme, color);
  $color: map-merge(
    $color,
    (
      background: $simData_front-background,
    )
  );
  $theme: map-merge(
    $theme,
    (
      color: $color,
    )
  );

  @include mat.all-component-themes($theme);
}
