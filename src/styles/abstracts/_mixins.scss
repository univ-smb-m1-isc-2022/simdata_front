@use '@angular/material' as mat;
@import 'variables';
@import "colors";

@mixin spread-map($map: ()) {
  @each $key, $value in $map {
    #{$key}: $value;
  }
}

@function background-gradient($color1, $color2) {
  @return linear-gradient(315deg, $color1, $color2);
}

@function theme-var($key, $fallback: null, $map: $theme-map-light) {
  @if not map-has-key($map, $key) {
    @error "key: '#{$key}', is not a key in map: #{$map}";
  }
  @if ($fallback) {
    @return var($key, $fallback);
  } @else {
    @return var($key);
  }
}



@function mat-var($palette,$key: 900){
  @return mat.get-color-from-palette($palette, $key);
}

@function transparency($color, $value: 50%){
  @return rgba($color, $value);
}

@mixin simData_front-theme($theme) {
  @if $theme == 'light' {
    $theme: $simData_front-theme-light;
  } @else if $theme == 'dark' {
    $theme: $simData_front-theme-dark;
  } @else {
    @error "theme: '#{$theme}' is not a valid theme";
  }

@include mat.all-component-themes($theme);
}

@mixin theme-back(){
  background: theme-var(--theme-back);
  transition: background 0.5s ease;
}

@mixin theme-grad-back(){
  @include theme-back();
  box-shadow: inset 80vw 0 1000vw var(--theme-back2);
  transition: box-shadow 0.5s ease, background 0.5s ease;
}


